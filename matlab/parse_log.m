% USAGE
%   1) first use parse_log.py to parse the training log
%       python caffe/tools/extra/parse_log.py train_04_25_16.log parse_log/
%
%   2) use the visualization script to show the curve
%       parse_log('parse_log/train_04_25_16.log.train', 100, 100, 60000)
% PARAMS
%   filepath          - log file path (generated by parse_log.py)
%   skip_first_loss   - skip the first few iterations for better visualization
%   smooth_step       - window size to smooth the curve
%   max_iters         - maximum iterations to visualize
% AUTHOR
%   Wei Yang platero.yang@gmail.com
% VERSION
% v0.0.1 2016-05-31: first version.

function parse_log(filepath, skip_first_loss, smooth_step, max_iters)
if ~exist('smooth_step', 'var')
  smooth_step = 1;
end

if ~exist('max_iters', 'var')
  max_iters = Inf;
end

% filepath = '/home/wyang/code/pose/convolutional-pose-machines/training/prototxt/LEEDS_PC/caffemodel/parse_log/train_04_14_16.log.train';
info = fopen(filepath);

header = strsplit(fgetl(info), ',');
num_iters = [];
losses = cell(length(header)-3, 1);

cnt = 1; last_iter = 0;
iterinfo = strsplit(fgetl(info), ',');
while last_iter < max_iters
  last_iter = str2num(iterinfo{1});
  num_iters = [num_iters; last_iter];
  
  for ii = 1:length(losses)
    losses{ii} = [losses{ii}; str2double(iterinfo{3+ii})]; 
  end
  try
    iterinfo = strsplit(fgetl(info), ',');
  catch
    break;
  end
  cnt = cnt + 1;
end

fclose(info);

% ------ draw graphs ------
colors = colormap(jet(length(losses)));
ymax = 10000; 
for ii = 1:length(losses)
  if ymax > max(losses{ii}(skip_first_loss:end)); % skip first 10 losses
    ymax = max(losses{ii}(skip_first_loss:end));
  end
  loss = smooth_loss(losses{ii}, smooth_step);
  plot(num_iters, loss, 'Color', colors(ii, :), 'LineWidth', 2); hold on;
end
ymin = min(cell2mat(losses));
axis([0 num_iters(end) 0 100]);
legend(header(4:end));
xlabel('# Iters');
ylabel('Loss');
grid on;

function loss = smooth_loss(loss, steps)
for i = 1:length(loss)
  loss(i) = mean(loss(i:min(i+steps, length(loss))));
end


